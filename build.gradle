buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://dl.bintray.com/palantir/releases/'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:${shadowJarVersion}"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${bintrayVersion}"
        classpath "com.palantir.gradle.javadist:gradle-java-distribution:${javaDistributionVersion}"
        classpath "com.palantir.launchconfig:gradle-launch-config-plugin:${launchConfigVersion}"
        classpath "com.palantir:gradle-baseline-java:${gradleBaselineVersion}"
        classpath "gradle.plugin.com.palantir.configurationresolver:gradle-configuration-resolver-plugin:${configurationResolverVersion}"
    }
}

plugins {
    id 'com.palantir.git-version' version "0.5.1"
    id 'com.palantir.jacoco-full-report' version "0.3.0"
    id 'org.inferred.processors' version "1.1.3"
    id 'org.unbroken-dome.test-sets' version "1.2.0"
}

apply plugin: 'com.palantir.baseline-config' // provides baselineUpdateConfig task
apply plugin: 'com.palantir.baseline-eclipse'
apply plugin: 'com.palantir.baseline-idea'

repositories {
    jcenter() // needed for baselineUpdateConfig task
}

allprojects {
    group 'com.palantir.groovylanguageserver'
    version gitVersion()

    repositories {
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://oss.jfrog.org/artifactory/oss-snapshot-local"
        }
    }

    if (System.env.CIRCLE_ARTIFACTS) {
        task copyCiArtifactsToCircle {
            outputs.upToDateWhen { false }
            doLast {
                [
                        file("${projectDir}/contiperf-report"), // contiperf benchmark results
                        file("${buildDir}/reports"), // jacoco, checkstyle, findbugs
                        file("${buildDir}/docs/javadoc/")
                ].each { src ->
                    copy {
                        from src
                        into "${System.env.CIRCLE_ARTIFACTS}/${project.name}/${src.name}"
                    }
                }
            }
        }
    }
}
